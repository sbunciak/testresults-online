swagger: '2.0'
info:
  version: '1.0'
  title: "testresults.online"
  description: Simple test results storage service
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
host: private-5592c9-testresultsonline.apiary-mock.com
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /projects:
    get:
      summary: List All Projects
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
          examples:
            application/json:
              - name: 'Project Manhattan'
                desc: 'The Manhattan Project was a research and development undertaking during World War II that produced the first nuclear weapons.'
    post:
      summary: Create a New Project
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        201:
          description: Project created
          schema:
            $ref: '#/definitions/Project'
          examples:
            application/json:
                name: 'Project Manhattan'
                desc: 'The Manhattan Project was a research and development undertaking during World War II that produced the first nuclear weapons.'
  /projects/{id}:
    get:
      summary: Find a Project
      parameters:
        - name: "id"
          in: "path"
          description: "ID of a project to find"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: Project found
          schema:
            $ref: '#/definitions/Project'
          examples:
            application/json:
                name: 'Project Manhattan'
                desc: 'The Manhattan Project was a research and development undertaking during World War II that produced the first nuclear weapons.'    
    put:
      summary: Update a Project
      parameters:
        - name: "id"
          in: "path"
          description: "ID of a project to update"
          required: true
          type: "integer"
          format: "int64"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        200:
          description: Project updated
          schema:
            $ref: '#/definitions/Project'
          examples:
            application/json:
                name: 'Project Manhattan'
                desc: 'The Manhattan Project was a research and development undertaking during World War II that produced the first nuclear weapons.'    
    delete:
      summary: Delete a Project
      parameters:
        - name: "id"
          in: "path"
          description: "ID of a project to be deleted"
          required: true
          type: "integer"
          format: "int64"
      responses:
        204:
          description: Project deleted
  /users:
    get:
      summary: List All Users
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
          examples:
            application/json:
              - name: 'John Doyle'
                email: 'johndoyle@example.com'
                project_roles:
                  - project: 'Project Manhattan'
                    roles:
                      - 'admin'
                      - 'user'
    post:
      summary: Create a New User
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: User created
          schema:
            $ref: '#/definitions/User'
          examples:
            application/json:
              name: 'John Doyle'
              email: 'johndoyle@example.com'
              project_roles:
                - project: 'Project Manhattan'
                  roles:
                    - 'admin'
                    - 'user'
  /users/{id}:
    get:
      summary: Find User
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the project"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: User found
          schema:
            $ref: '#/definitions/User'
          examples:
            application/json:
                name: 'John Doyle'
                email: 'johndoyle@example.com'
                project_roles:
                  - project: 'Project Manhattan'
                    roles:
                      - 'admin'
                      - 'user'
    put:
      summary: Update User
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the project to update"
          required: true
          type: "integer"
          format: "int64"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: User updated
          schema:
            $ref: '#/definitions/User'
          examples:
            application/json:
                name: 'John Doyle'
                email: 'johndoyle@example.com'
                project_roles:
                  - project: 'Project Manhattan'
                    roles:
                      - 'admin'
                      - 'user'
    delete:
      summary: Delete User
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the user to be deleted"
          required: true
          type: "integer"
          format: "int64"
      responses:
        204:
          description: User deleted
  /testsuites:
    get:
      summary: List All TestSuites
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/TestSuite'
          examples:
            application/json:
              - name: 'Regression Tests'
                skipped: 0
                errors: 0
                failures: 2
                tests: 23
                time: 5438.68
                project_id: '507f191e810c19729de860ea'
                labels: 
                  - ER1
                  - regression
                  - automated
                properties_array:
                  - properties:
                    - name: OS
                      value: Linux
                    - name: java.vm.vendor
                      value: Oracle Corporation
                testcases:
                  - name: RegressionTestCase
                    time: 438.84
                    classname: com.example.regression.Test
    post:
      summary: Create a TestSuite (report test results)
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestSuite'
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/json"
      responses:
        201:
          description: TestSuite created
          schema:
            $ref: '#/definitions/TestSuite'
          examples:
            application/json:
                name: 'Regression Tests'
                skipped: 0
                errors: 0
                failures: 2
                tests: 23
                time: 5438.68
                project_id: '507f191e810c19729de860ea'
                labels: 
                  - ER1
                  - regression
                  - automated
                properties_array:
                  - properties:
                    - name: OS
                      value: Linux
                    - name: java.vm.vendor
                      value: Oracle Corporation
                testcases:
                  - name: RegressionTestCase
                    time: 438.84
                    classname: com.example.regression.Test
  /testsuites/{id}:
    get:
      summary: Find a TestSuite
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the TestSuite to find"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: TestSuite found
          schema:
            $ref: '#/definitions/TestSuite'
          examples:
            application/json:
                name: 'Regression Tests'
                skipped: 0
                errors: 0
                failures: 2
                tests: 23
                time: 5438.68
                project_id: '507f191e810c19729de860ea'
                labels: 
                  - ER1
                  - regression
                  - automated
                properties_array:
                  - properties:
                    - name: OS
                      value: Linux
                    - name: java.vm.vendor
                      value: Oracle Corporation
                testcases:
                  - name: RegressionTestCase
                    time: 438.84
                    classname: com.example.regression.Test
    put:
      summary: Update a TestSuite
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the TestSuite to update"
          required: true
          type: "integer"
          format: "int64"
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestSuite'
      responses:
        200:
          description: TestSuite updated
          schema:
            $ref: '#/definitions/TestSuite'
          examples:
            application/json:
                name: 'Regression Tests'
                skipped: 0
                errors: 0
                failures: 2
                tests: 23
                time: 5438.68
                project_id: '507f191e810c19729de860ea'
                labels: 
                  - ER1
                  - regression
                  - automated
                properties_array:
                  - properties:
                    - name: OS
                      value: Linux
                    - name: java.vm.vendor
                      value: Oracle Corporation
                testcases:
                  - name: RegressionTestCase
                    time: 438.84
                    classname: com.example.regression.Test
    delete:
      summary: Delete a TestSuite
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the TestSuite to be deleted"
          required: true
          type: "integer"
          format: "int64"
      responses:
        204:
          description: TestSuite deleted

definitions:
  User:
    title: User
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      project_roles:
        type: array
        items:
          $ref: '#/definitions/ProjectRole'
    required:
      - name
      - email
    example:
      name: 'John Doyle'
      email: 'johndoyle@example.com'
      project_roles:
        - project: 'Project Manhattan'
          roles:
            - 'admin'
            - 'user'
  Project:
    title: Project
    type: object
    properties:
      name:
        type: string
      desc:
        type: string
    required:
      - name
    example:
      name: 'Project Manhattan'
      desc: 'The Manhattan Project was a research and development undertaking during World War II that produced the first nuclear weapons.'
  ProjectRole:
    title: ProjectRole
    type: object
    properties:
      project:
        type: string
      roles:
        type: array
        items: 
          type: string
    required:
      - project
      - roles
  TestSuite:
    title: TestSuite
    type: object
    properties:
      name: 
        type: string
      group:
        type: string
      tests:
        type: integer
      failures:
        type: integer
      errors:
        type: integer
      skipped:
        type: integer
      time:
        type: number
      labels:
        type: array
        items: 
          type: string
      project_id:
        type: string
      # xml field is 'properties'
      properties_array:
        type: array
        items:
          $ref: '#/definitions/Property'
      # xml field is 'testcase'
      testcases:
        type: array
        items:
          $ref: '#/definitions/TestCase' 
    required:
      - name
      - skipped
      - errors
      - failures
      - tests
      - time
      - project_id
    example:
      name: 'Regression Tests'
      skipped: 0
      errors: 0
      failures: 2
      tests: 23
      time: 5438.68
      project_id: '507f191e810c19729de860ea'
      labels: 
        - ER1
        - regression
        - automated
      properties_array:
        - properties:
          - name: OS
            value: Linux
          - name: java.vm.vendor
            value: Oracle Corporation
      testcases:
        - name: RegressionTestCase
          time: 438.84
          classname: com.example.regression.Test
  TestCase:
    title: TestCase
    type: object
    properties:
      name:
        type: string
      classname:
        type: string
      group:
        type: string
      time:
        type: number
      system_out:
        type: string
      system_err:
        type: string
      failure:
        $ref: '#/definitions/Failure'
      rerunFailure:
        $ref: '#/definitions/Failure'
      skipped:
        $ref: '#/definitions/Skipped'
      error:
        $ref: '#/definitions/Error'
    required:
      - name
      - time
  Skipped:
    title: Property
    type: object
    properties:
      message:
        type: string
      content:
        type: string
  Failure:
    title: Property
    type: object
    properties:
      message:
        type: string
      content:
        type: string
      time:
        type: number
      type:
        type: string
  Error:
    title: Property
    type: object
    properties:
      message:
        type: string
      content:
        type: string
      type:
        type: string
  Properties:
    title: Property
    type: object
    properties:
      # xml field is 'property'
      properties:
        type: array
        items:
          $ref: '#/definitions/Property' 
  Property:
    title: Property
    type: object
    properties:
      name:
        type: string
      value:
        type: string
    required:
      - name
      - value